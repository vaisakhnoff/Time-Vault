<%- include("../../views/partials/admin/header") %>
<head>
  <link
    rel="stylesheet"
    href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css"
  />
</head>

<!-- Top row: Title & Add Product button -->
<div class="content-header d-flex justify-content-between align-items-center px-4 py-3">
  <h2 class="content-title card-title mb-0">Products</h2>
  <a href="/admin/addProducts" class="btn btn-primary btn-sm">Add Product</a>
</div>

<!-- Old-style search bar -->
<header class="card-header text-center mb-20">
  <form action="" method="get" class="d-inline">
    <div
      class="input-group input-group-sm border border-1 border-grey rounded-pill"
      style="width: 500px; margin-left: 230px;"
    >
      <input
        type="text"
        class="form-control border-0 rounded-pill"
        placeholder="Search products or brands"
        name="search"
      />
      <button class="btn border-0" type="submit">Search</button>
    </div>
  </form>
</header>

<!-- Table of Products -->
<div class="px-4 mt-3">
  <div class="card shadow-sm">
    <div class="card-body p-0">
      <table class="table table-striped mb-0">
        <thead>
          <tr>
            <th scope="col">Product name</th>
            <th scope="col">Brand</th>
            <th scope="col">Category</th>
            <th scope="col">Sale Price</th>
            <th scope="col">Offer Price</th>
            <th scope="col">Offer</th>
            <th scope="col">Quantity</th>
            <!-- Give the Action column some width -->
            <th scope="col" style="width: 180px;">Action</th>
            <!-- Give the Edit column its own width -->
            <th scope="col" style="width: 100px;">Edit</th>
          </tr>
        </thead>
        <tbody>
          <% for (let i = data.length - 1; i >= 0; i--) { %>
          <tr>
            <td><%= data[i].productName %></td>
            <td>Brand A</td>
            <td><%= data[i].category.name %></td>
            <td><%= data[i].salePrice %></td>
            <td>$80</td>
            <td>
              <button class="btn btn-info btn-sm me-1" style="width: 80px;">Add</button>
              <button class="btn btn-info btn-sm" style="width: 80px;">Remove</button>
            </td>
            <td>10</td>
            <td>
              <button class="btn btn-danger btn-sm me-1" style="width: 80px;">Block</button>
              <button class="btn btn-success btn-sm" style="width: 80px;">Unblock</button>
            </td>
            <td>
              <button class="btn btn-info btn-sm" style="width: 80px;">Edit</button>
            </td>
          </tr>
          <% } %>
        </tbody>
      </table>
    </div>
  </div>
</div>

<div class="container mt-3">
  <nav aria-label="Page navigation">
    <ul class="pagination justify-content-center mb-20" style="margin-right: 200px;">
      <% for (let i = 1; i <= totalPages; i++) { %>
      <li class="page-item <%= (i === currentPage) ? 'active' : '' %>">
        <a class="page-link" href="?page=<%= i %>"><%= i %></a>
      </li>
      <% } %>
    </ul>
  </nav>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<%- include("../../views/partials/admin/footer") %>


const search = req.query.search || "";
        console.log("1",search)
        const page = req.query.page || 1;
        const limit = 4;
        const productData = await Product.find({
            $or:[
                {
                    productName:{$regex: new RegExp(".*"+search+".*","i")},
    
                }
            ],
        }).limit(limit*1).skip((page-1)*limit).populate('cateory').exec();
        console.log("2",productData)
    
    const count = await Product.find({
            $or:[
                {productName:{$regex:new RegExp(".*"+search+".*","i")}}
            ]
        }).countDocuments();
        console.log("3",count)
    
    const category = await Category.find({isListed:true});
    if(category){
        res.render('products',{
            data:productData,
            currentPage:page,
            totalPages:Math.ceil(count/limit),
            cat:category
        })
    }else{
        res.render("admin-error")
    }