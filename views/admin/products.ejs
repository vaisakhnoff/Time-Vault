<%- include("../../views/partials/admin/header") %>
<head>
  <link
    rel="stylesheet"
    href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css"
  />
</head>

<!-- Top row: Title & Add Product button -->
<div class="content-header d-flex justify-content-between align-items-center px-4 py-3">
  <h2 class="content-title card-title mb-0">Products</h2>
  <a href="/admin/addProducts" class="btn btn-primary btn-sm">Add Product</a>
</div>

<!-- Old-style search bar -->
<header class="card-header text-center mb-20">
  
  <form action="" method="get" class="d-inline">
    <div class="input-group input-group-sm border border-1 border-grey rounded-pill" style="width: 500px; margin-left: 230px;">
      <input
        type="text"
        class="form-control border-0 rounded-pill"
        placeholder="Search products or brands"
        name="search"
      />
      <button class="btn border-0" type="submit">Search</button>
    </div>
  </form>
  
</header>

<!-- Table of Products -->
<div class="px-4 mt-3">
  <div class="card shadow-sm">
    <div class="card-body p-0">
      <table class="table table-striped mb-0">
        <thead>
          <tr>
            <th scope="col">Product name</th>
            <th scope="col">Brand</th>
            <th scope="col">Category</th>
            <th scope="col">Sale Price</th>
            <th scope="col">Offer Price</th>
            <th scope="col">Offer</th>
            <th scope="col">Quantity</th>
            <!-- Give the Action column some width -->
            <th scope="col" style="width: 180px;">Action</th>
            <!-- Give the Edit column its own width -->
            <th scope="col" style="width: 100px;">Edit</th>
          </tr>
        </thead>
        <tbody>
          <% products.forEach(function(product) { %>
            <tr>
              <td><%= product.productName %></td>
              <td>
                <%= product.brand ? product.brand : "Brand A" %>
              </td>
              <td><%= product.description %></td>
              <td><%= product.regularPrice %></td>
              <td><%= product.salePrice %></td>
              <td>
                <button class="btn btn-info btn-sm me-1" style="width: 80px;">Add</button>
                <button class="btn btn-info btn-sm" style="width: 80px;">Remove</button>
              </td>
              <td><%= product.quantity %></td>
              <td>
                <% if(product.isBlocked){ %>
                  <button class="btn btn-success btn-sm unblock-button" data-id="<%= product._id %>" style="width: 80px;">Unblock</button>
                <% } else { %>
                  <button class="btn btn-danger btn-sm block-button" data-id="<%= product._id %>" style="width: 80px;">Block</button>
                <% } %>
              </td>
              <td>
                <a href="/admin/editProduct/<%= product._id %>" class="btn btn-info btn-sm" style="width: 80px;">Edit</a>
              </td>
            </tr>
          <% }); %>
        </tbody>
       
      </table>
    </div>
  </div>
</div>

<div class="container mt-3">
  <nav aria-label="Page navigation">
    <ul class="pagination justify-content-center mb-20" style="margin-right: 200px;">
      <%  %>
      <li class="page-item <%= %>">
        <a class="page-link" href="?page=<%= %>"><%= %></a>
      </li>
      <%  %>
    </ul>
  </nav>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    // Helper function to update the button state after a successful operation
    function updateButtonState(button, isBlocked) {
      if (isBlocked) {
        // Change the button to "Unblock" if product is now blocked
        button.innerText = "Unblock";
        button.classList.remove("btn-danger", "block-button");
        button.classList.add("btn-success", "unblock-button");
        // Remove previous listeners and add new one for unblocking
        button.replaceWith(button.cloneNode(true));
        button = document.querySelector(`[data-id="${button.dataset.id}"]`);
        button.addEventListener("click", () => {
          sendRequest("/admin/unblockProduct", button.dataset.id, button);
        });
      } else {
        // Change the button to "Block" if product is now unblocked
        button.innerText = "Block";
        button.classList.remove("btn-success", "unblock-button");
        button.classList.add("btn-danger", "block-button");
        // Remove previous listeners and add new one for blocking
        button.replaceWith(button.cloneNode(true));
        button = document.querySelector(`[data-id="${button.dataset.id}"]`);
        button.addEventListener("click", () => {
          sendRequest("/admin/blockProduct", button.dataset.id, button);
        });
      }
    }
    
    // Function to send a fetch request and update the UI on success
    function sendRequest(url, productId, button) {
      fetch(url, {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify({ id: productId })
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          // Set a message based on the new status
          let message = data.product.isBlocked
            ? "Product blocked successfully!"
            : "Product unblocked successfully!";
          // Show a SweetAlert popup with the success message
          Swal.fire({
            icon: 'success',
            title: 'Success',
            text: message,
            timer: 1500,
            showConfirmButton: false
          });
          updateButtonState(button, data.product.isBlocked);
        } else {
          // Show an error SweetAlert if the operation failed
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: data.message || "Operation failed"
          });
        }
      })
      .catch(error => {
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: error.message
        });
        console.error("Error:", error);
      });
    }
    
    // Attach click event listeners for the initial buttons
    document.querySelectorAll(".block-button").forEach(button => {
      button.addEventListener("click", () => {
        sendRequest("/admin/blockProduct", button.dataset.id, button);
      });
    });
    
    document.querySelectorAll(".unblock-button").forEach(button => {
      button.addEventListener("click", () => {
        sendRequest("/admin/unblockProduct", button.dataset.id, button);
      });
    });
  });
  </script>
  
  
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<%- include("../../views/partials/admin/footer") %>
