<%- include("../../views/partials/admin/header") %>
<div class="content-header row">
    <div class="d-flex justify-content-between align-items-center">
        <h2 class="content-title card-title">Customers</h2>
       
    </div>
</div>         
        </div>
        
            <header class="card-header text-center mb-20">
                <form action="/admin/users/" method="get" class="d-inline">
                    <div class="input-group input-group-sm border border-1 border-grey rounded-pill" style="width: 500px; margin-left: 230px;">
                        <input type="text" class="form-control border-0 rounded-pill" placeholder="Search customers..." name="search">
                        <button class="btn  border-0" type="submit">Search</button>
                    </div>
                </form>
            </header>
            <div class="right mt-5">
                <table class="table table-striped">
                    <thead>
                      <tr>
                        <th scope="col"><b>First Name</b></th>
                        <th scope="col"><b>Last Name</b></th>
                        <th scope="col"><b>Email</b></th>
                        <th scope="col"><b>Phone No</b></th>
                        <th scope="col"><b>Action</b></th>
                      </tr>
                    </thead>
                    <tbody>
                        <% for(let i = 0; i < data.length; i++) { %>
                          <tr>
                            <td><%= data[i].firstName %></td>
                            <td><%= data[i].lastName %></td>
                            <td><%= data[i].email %></td>
                            <td><%= data[i].phoneNumber %></td>
                            <td>
                              <% if(data[i].isBlocked === false) { %>
                                <button class="btn btn-danger action-btn blockCustomer" data-id="<%= data[i]._id %>">
                                  Block
                                </button>
                              <% } else { %>
                                <button class="btn btn-success action-btn unblockCustomer" data-id="<%= data[i]._id %>">
                                  Unblock
                                </button>
                              <% } %>
                            </td>
                          </tr>
                        <% } %>
                      </tbody>
                      
                  </table>
        </div>
        <div class="container mt-3">
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center mb-20" style="margin-right: 200px;">
                    <% for(let i = 0; i < totalPages; i++) { %>
                      <li class="page-item <%= (i === currentPage) ? 'active' : '' %>">
                        <a class="page-link" href="?page=<%= i %>"><%= i %></a>
                      </li>
                    <% } %>
                  </ul>
                  
            </nav>
        </div>
        <%- include("../../views/partials/admin/footer") %>
        <script>
document.addEventListener('DOMContentLoaded', () => {
  // Using event delegation to catch clicks on block/unblock buttons
  document.addEventListener('click', async (event) => {
    const target = event.target;
    
    if (target.matches('.blockCustomer')) {
      event.preventDefault();
      const id = target.getAttribute('data-id');
      
      // Show confirmation dialog before blocking
      const result = await Swal.fire({
        title: 'Block User?',
        text: 'Are you sure you want to block this user?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#dc3545',
        cancelButtonColor: '#6c757d',
        confirmButtonText: 'Yes, block user',
        cancelButtonText: 'Cancel'
      });

      if (result.isConfirmed) {
        try {
          const response = await fetch(`/admin/blockCustomer?id=${id}`);
          const data = await response.json();
          
          if (data.success) {
            // Show success message
            await Swal.fire({
              icon: 'success',
              title: 'User Blocked',
              text: 'The user has been blocked successfully',
              confirmButtonColor: '#28a745'
            });
            
            // Update the button
            target.classList.remove('blockCustomer', 'btn-danger');
            target.classList.add('unblockCustomer', 'btn-success');
            target.textContent = 'Unblock';
          } else {
            // Show error message
            await Swal.fire({
              icon: 'error',
              title: 'Error',
              text: data.message || 'Failed to block user',
              confirmButtonColor: '#dc3545'
            });
          }
        } catch (error) {
          console.error('Error blocking customer:', error);
          await Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Failed to block user. Please try again.',
            confirmButtonColor: '#dc3545'
          });
        }
      }
    } else if (target.matches('.unblockCustomer')) {
      event.preventDefault();
      const id = target.getAttribute('data-id');
      
      // Show confirmation dialog before unblocking
      const result = await Swal.fire({
        title: 'Unblock User?',
        text: 'Are you sure you want to unblock this user?',
        icon: 'question',
        showCancelButton: true,
        confirmButtonColor: '#28a745',
        cancelButtonColor: '#6c757d',
        confirmButtonText: 'Yes, unblock user',
        cancelButtonText: 'Cancel'
      });

      if (result.isConfirmed) {
        try {
          const response = await fetch(`/admin/unblockCustomer?id=${id}`);
          const data = await response.json();
          
          if (data.success) {
            // Show success message
            await Swal.fire({
              icon: 'success',
              title: 'User Unblocked',
              text: 'The user has been unblocked successfully',
              confirmButtonColor: '#28a745'
            });
            
            // Update the button
            target.classList.remove('unblockCustomer', 'btn-success');
            target.classList.add('blockCustomer', 'btn-danger');
            target.textContent = 'Block';
          } else {
            // Show error message
            await Swal.fire({
              icon: 'error',
              title: 'Error',
              text: data.message || 'Failed to unblock user',
              confirmButtonColor: '#dc3545'
            });
          }
        } catch (error) {
          console.error('Error unblocking customer:', error);
          await Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Failed to unblock user. Please try again.',
            confirmButtonColor: '#dc3545'
          });
        }
      }
    }
  });
});
</script>

