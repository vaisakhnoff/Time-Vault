
<%- include("../../views/partials/admin/header") %>
<head>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
   <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
</head>
<style>
   .error-message{
       color: red;
   }


       .thumbnails-container {
           display: flex;
           overflow-x: auto;
       }


       .thumbnail {
           margin-right: 10px;


       }
</style>
   <section class="content-main">
       <div class="row">
           <div class="col-9">
               <div class="content-header">
                   <h2 class="content-title">Add New Product</h2>
               </div>
           </div>
           <div class="col-lg-6">
               <div class="card mb-4">
                   <div class="card-body">
                       <form method="post" action="/admin/addProducts" enctype="multipart/form-data"
                           onsubmit="return validateForm()
">
                           <div class="mb-4">
                               <label for="product_name" class="form-label">Product Name</label>
                               <input type="text" placeholder="Type here" name="productName"
                                   class="form-control border" id="product_name">
                               <div id="productName-error" class="error-message"></div>
                           </div>
                           <div class="col-lg-4 mb-4">
                               <label class="form-label">Brand</label>
                               <select class="form-select border" name="brand">
                                   
                                
                                       <option value="">
                                           


                                         
                                       </option>
                                       
                                  
                               </select>
                               <div id="brand-error" class="error-message"></div>
                           </div>
                           <div class="mb-4">
                               <label class="form-label">Full description</label>
                               <textarea placeholder="Type here" id="descriptionid" name="description" class="form-control border"
                                   rows="4"></textarea>
                               <div id="description-error" class="error-message"></div>
                           </div>
                           <div class="row">
                               <div class="col-lg-4">
                                   <div class="mb-4">
                                       <label class="form-label">Regular price</label>
                                       <input placeholder="$" name="regularPrice" type="text"
                                           class="form-control border">
                                           <div id="regularPrice-error" class="error-message"></div>
                                   </div>
                               </div>
                               <div class="col-lg-4">
                                   <div class="mb-4">
                                       <label class="form-label">Sale price</label>
                                       <input placeholder="$" name="salePrice" type="text" class="form-control border">
                                      
                                   </div>
                                   <div id="salePrice-error" class="error-message"></div>
                               </div>
                               <div class="col-lg-4">
                                   <div class="mb-4">
                                       <label class="form-label">Quantity</label>
                                       <input placeholder="" name="quantity" type="text" class="form-control border">
                                       <div id="quantity-error" class="error-message"></div>
                                   </div>
                               </div>
                           </div>
                           <div class="row">
                              
                               <!-- <div class="col-lg-4">
                                   <div class="mb-4">
                                       <label class="form-label">Color</label>
                                       <input  name="color" type="text" class="form-control border">
                                   </div>
                                   <div id="color-error" class="error-message"></div>
                               </div>
                             -->
                           </div>
                           <div class="card mb-4">
                               <div class="card-body">
                                   <div class="row gx-2">
                                       <div class="col-sm-6 mb-3">
                                           <label class="form-label">Category</label>
                                           <select class="form-select border" style="width: 150px;" name="category">
                                            <% for(let i = 0; i < cat.length; i++){ %>
                                              <option value="<%= cat[i].name %>">
                                                <%= cat[i].name %>
                                              </option>
                                            <% } %>
                                          </select>
                                        
                                           <div id="category-error" class="error-message"></div>
                                       </div>
                                   </div>
                               </div>
                           </div>
                           <div class="card mb-2">
                               <div class="card-header">
                                   <h4>Choose images</h4>
                               </div>
                               <div class="border row">
                                   <div id="addedImagesContainer" class="thumbnails-container"></div>
                               </div>
                               <div class="row">
                                   <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                       <img src="" alt="" id="imgView1">
                                                                   <input class="form-control" type="file" name="images" id="input1"
                                                                       accept="image/png, image/jpeg, image/jpg"
                                                                       onchange="viewImage1(event), viewImage(event, 1)">
                                                                       <div id="images-error" class="error-message"></div>
                                                               </div>
                                                               <div class="image-cropper d-flex align-items-center"
                                                                   style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                                   <img src="" id="croppedImg1" alt="">
                                                                   <button type="button" id="saveButton1" class="btn-sm btn-primary">Save</button>
                                                               </div>
                                                           </div>
                                                          
                                                           <div class="row">
                                                               <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                                                   <img src="" alt="" id="imgView2">


                                                                   <input class="form-control" type="file" name="images" id="input2"
                                                                       accept="image/png, image/jpeg, image/jpg"
                                                                       onchange="viewImage2(event),viewImage(event, 2)">
                                                               </div>
                                                               <div class="image-cropper d-flex align-items-center"
                                                                   style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                                   <img src="" id="croppedImg2" alt="">
                                                                   <button type="button" id="saveButton2" class="btn-sm btn-primary">Save</button>
                                                               </div>
                                                           </div>
                                                          
                                                           <div class="row">
                                                               <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                                                   <img src="" alt="" id="imgView3">


                                                                   <input class="form-control" type="file" name="images" id="input3"
                                                                       accept="image/png, image/jpeg, image/jpg"
                                                                       onchange="viewImage3(event),viewImage(event, 3)">
                                                               </div>
                                                               <div class="image-cropper d-flex align-items-center"
                                                                   style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                                   <img src="" id="croppedImg3" alt="">
                                                                   <button type="button" id="saveButton3" class="btn-sm btn-primary">Save</button>
                                                               </div>
                                                           </div>
                                                          
                                                           <div class="row">
                                                               <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                                                   <img src="" alt="" id="imgView4">


                                                          
                                                                   <input class="form-control" type="file" name="images" id="input4"
                                                                       accept="image/png, image/jpeg, image/jpg"
                                                                       onchange="viewImage4(event),viewImage(event, 4)">
                                                               </div>
                                                               <div class="image-cropper d-flex align-items-center"
                                                                   style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                                   <img src="" id="croppedImg4" alt="">
                                                                   <button type="button" id="saveButton4" class="btn-sm btn-primary">Save</button>
                                                               </div>
                                                           </div>
                          
                                                       </div>
                           </div>
                           <div>
                               <button class="btn btn-md rounded font-sm hover-up"  type="button" onclick="validateAndSubmit()
">Publish</button>
                           </div>
                       </form>
                   </div>
               </div>
           </div>
       </div>

      
      

      
   </section>

  
  
<script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
     
<script>

   function validateAndSubmit(){
    if(validateForm()){
        document.forms[0].submit();
    }
}



function viewImage1(event){
document.getElementById("imgView1").src=URL.createObjectURL(event.target.files[0]);
}

function viewImage2(event){
document.getElementById("imgView2").src=URL.createObjectURL(event.target.files[0]);
}

function viewImage3(event){
document.getElementById("imgView3").src=URL.createObjectURL(event.target.files[0]);
}

function viewImage4(event){
document.getElementById("imgView4").src=URL.createObjectURL(event.target.files[0]);
}

function viewImage(event, index) {
    let input = event.target;
    let reader = new FileReader();
    
    reader.onload = function () {
        // Set the image source to the loaded dataURL
        let image = document.getElementById('imgView' + index);
        image.src = reader.result;

        // Initialize Cropper
        let cropper = new Cropper(image, {
            aspectRatio: 1,
            viewMode: 1,
            guides: true,
            background: false,
            autoCropArea: 1
        });

        // Show the cropper container
        let cropperContainer = document.querySelector('#croppedImg' + index).parentNode;
        cropperContainer.style.display = 'block';

        // Set up the save button to capture the cropped image
        let saveButton = document.querySelector('#saveButton' + index);
        
        // Remove previous event listener (if any) to avoid duplicates:
        saveButton.replaceWith(saveButton.cloneNode(true));
        saveButton = document.querySelector('#saveButton' + index);


        
        saveButton.addEventListener('click', () => {
  const croppedCanvas = cropper.getCroppedCanvas();
  croppedCanvas.toBlob(blob => {
    // Create a new file from the cropped blob
    const fileName = `cropped-img-${Date.now()}-${index}.png`;
    const newFile = new File([blob], fileName, { type: 'image/png' });
    const dataTransfer = new DataTransfer();
    dataTransfer.items.add(newFile);
    document.getElementById('input' + index).files = dataTransfer.files;

    // Update the preview with the cropped image
    const mainPreview = document.getElementById('imgView' + index);
    mainPreview.src = croppedCanvas.toDataURL('image/png');
    mainPreview.style.display = 'block';
    
    // Optionally hide any duplicate/original preview element if needed
    // e.g., if you have a separate element, remove or hide it here.
  });

  // Hide the cropping container and destroy the cropper instance
  const cropContainer = document.getElementById('cropContainer' + index);
  cropContainer.classList.add('hidden');
  cropper.destroy();
});


    };

    reader.readAsDataURL(input.files[0]);
}



const selectedImages = [];
document.getElementById('input1').addEventListener("change",handleFileSelect);

function handleFileSelect(event){
    const addedImagesContainer = document.getElementById('addedImagesContainer');
    addedImagesContainer.innerHTML ="";
    const files = event.target.files;

    for(let i =0;i<files.length;i++){
    const file = files[i];
    selectedImages.push(file);
    const thumbnail = document.createElement('div');
    thumbnail.classList.add('thumbnail');

    const img = document.createElement('img');
    img.src=URL.createObjectURL(file);
    img.alt="thumbnail";
    img.style.width="50px";
    img.style.height="auto";
    const removeIcon = document.createElement('span');
    removeIcon.classList.add("remove-icon")
    removeIcon.innerHTML='&times;';
    removeIcon.addEventListener('click',function(){
        const index = selectedImages.indexOf(file);
        if(index!== -1){
            selectedImages.splice(index,1);
        }
        thumbnail.remove();
    });
    thumbnail.appendChild(img);
thumbnail.appendChild(removeIcon);
addedImagesContainer.appendChild(thumbnail);
}

}







function validateAndSubmit() {
    if (validateForm()) {
      document.forms[0].submit();
    }
  }

  function validateForm() {
    clearErrorMessages();
    let isValid = true;

    const name = document.getElementsByName('productName')[0].value.trim();
    const description = document.getElementById('descriptionid').value.trim();
    const brand = document.getElementsByName('brand')[0].value.trim();
    const price = document.getElementsByName('regularPrice')[0].value.trim();
    const salePrice = document.getElementsByName('salePrice')[0].value.trim();
    const quantity = document.getElementsByName('quantity')[0].value.trim();
    const images = document.getElementById('input1');

    // 1. Product Name
    if (name === "") {
      displayErrorMessage('productName-error', 'Please enter a product name.');
      isValid = false;
    }

    // 2. Description
    if (description === "") {
      displayErrorMessage('description-error', 'Please enter a product description.');
      isValid = false;
    }

    // 3. Quantity
    // Make sure it's a valid non-negative integer
    if (isNaN(quantity) || parseInt(quantity) < 0) {
      displayErrorMessage('quantity-error', 'Please enter a valid non-negative quantity.');
      isValid = false;
    }

    // 4. Regular Price
    // Must be a non-negative number (up to 2 decimal places)
    if (!/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price) < 0) {
      displayErrorMessage('regularPrice-error', 'Please enter a valid non-negative price.');
      isValid = false;
    }

    // 5. Sale Price
    // Must be a non-negative number (up to 2 decimal places)
    if (!/^\d+(\.\d{1,2})?$/.test(salePrice) || parseFloat(salePrice) < 0) {
      displayErrorMessage('salePrice-error', 'Please enter a valid non-negative sale price.');
      isValid = false;
    }

    // 6. Price vs. Sale Price
    if (parseFloat(price) <= parseFloat(salePrice)) {
      displayErrorMessage('regularPrice-error', 'Regular price must be greater than sale price.');
      isValid = false;
    }

    // 7. At Least One Image
    if (images.files.length === 0) {
      displayErrorMessage("images-error", 'Please select at least one image.');
      isValid = false;
    }

    return isValid;
  }

  function displayErrorMessage(elementId, message) {
    const errorElement = document.getElementById(elementId);
    errorElement.innerText = message;
    errorElement.style.display = "block";
  }

  function clearErrorMessages() {
    const errorElements = document.getElementsByClassName('error-message');
    Array.from(errorElements).forEach(element => {
      element.innerText = '';
    });
  }


          function displayErrorMessage(elementId, message) {
              var errorElement = document.getElementById(elementId);
              errorElement.innerText = message;
              errorElement.style.display = "block";
          }
  
  
          function clearErrorMessages() {
              const errorElements = document.getElementsByClassName('error-message');
              Array.from(errorElements).forEach(element => {
                  element.innerText = '';
              });
              const errorMessage = document.getElementById('errorMessage');
  
  
              
          }




</script>
<%- include("../../views/partials/admin/footer") %>


