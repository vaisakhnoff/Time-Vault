<%- include("../../views/partials/user/header") %>

<!-- Add a gap between header and order details -->
<div class="header-gap"></div>

<section class="checkout_page section_gap">
  <div class="container">
    <h1>Checkout</h1>

    <!-- Product Details Section -->
    <div class="cart_products">
      <h2>Your Cart Items</h2>
      <% if (cart && cart.items && cart.items.length > 0) { %>
        <table class="table table-bordered">
          <thead>
            <tr>
              <th>Image</th>
              <th>Product</th>
              <th>Quantity</th>
              <th>Price</th>
              <th>Total</th>
            </tr>
          </thead>
          <tbody>
            <% cart.items.forEach(function(item) { %>
              <tr>
                <td>
                  <% if(item.productId && item.productId.productImage && item.productId.productImage.length > 0){ %>
                    <img src="/uploads/product-images/<%= item.productId.productImage[0] %>" alt="<%= item.productId.productName %>" style="max-width: 100px;">
                  <% } else { %>
                    <p>No Image</p>
                  <% } %>
                </td>
                <td><%= item.productId.productName %></td>
                <td><%= item.quantity %></td>
                <td>₹<%= item.productId.salePrice.toFixed(2) %></td>
                <td>₹<%= (item.productId.salePrice * item.quantity).toFixed(2) %></td>
              </tr>
            <% }); %>
          </tbody>
        </table>
      <% } else { %>
        <p>No items in your cart.</p>
      <% } %>
    </div>

    <!-- Order Form (Address + Payment Method) -->
    <div class="order_form mt-5">
      <form id="checkout-form" method="POST" action="/placeOrder">
        <!-- Address Details Section -->
        <div class="address_section mb-4">
          <div class="d-flex justify-content-between align-items-center mb-4">
            <h2>Select Delivery Address</h2>
            <a href="/addAddress?from=checkoutPage" class="btn btn-primary">Add New Address</a>
          </div>

          <% if (address && address.length > 0) { %>
            <div class="row">
              <% address.forEach(function(addr) { %>
                <div class="col-md-6 mb-4">
                  <div class="card">
                    <div class="card-body">
                      <div class="form-check mb-3">
                        <input class="form-check-input" type="radio" 
                               name="addressId" 
                               value="<%= addr._id %>" 
                               id="address<%= addr._id %>" 
                               required>
                        <label class="form-check-label" for="address<%= addr._id %>">
                          Use this address
                        </label>
                      </div>
                      
                      <h5 class="card-title"><%= addr.addressType %></h5>
                      <div class="address-details">
                        <p class="mb-1"><strong><%= addr.name %></strong></p>
                        <p class="mb-1"><%= addr.city %>, <%= addr.state %></p>
                        <p class="mb-1"><%= addr.landMark %></p>
                        <p class="mb-1">PIN: <%= addr.pincode %></p>
                        <p class="mb-1">Phone: <%= addr.phone_no %></p>
                        <% if (addr.altPhone_no) { %>
                          <p class="mb-1">Alt Phone: <%= addr.altPhone_no %></p>
                        <% } %>
                      </div>
                      
                      <div class="mt-3">
                        <a href="/editAddress?id=<%= addr._id %>&from=checkoutPage" class="btn btn-outline-primary btn-sm">Edit</a>
                        <a href="javascript:void(0);" class="btn btn-outline-danger btn-sm" onclick="deleteAddress('<%= addr._id %>','checkoutPage')">Delete</a>
                      </div>
                    </div>
                  </div>
                </div>
              <% }); %>
            </div>
          <% } else { %>
            <div class="alert alert-info">
              No addresses found. Please add a delivery address.
            </div>
          <% } %>
        </div>

        <!-- Payment Method Section -->
        <div class="payment_section mb-4">
          <h2>Select Payment Method</h2>
          <div class="payment-selection mb-4">
            <div class="form-check">
              <input class="form-check-input" type="radio" 
                     name="paymentMethod" 
                     value="COD" 
                     id="cod" 
                     required>
              <label class="form-check-label" for="cod">
                Cash on Delivery
              </label>
            </div>
            <div class="form-check">
              <input class="form-check-input" type="radio" 
                     name="paymentMethod" 
                     value="Online" 
                     id="online">
              <label class="form-check-label" for="online">
                Online Payment
              </label>
            </div>
          </div>
        </div>

        <!-- Place Order Button -->
        <button type="submit" class="btn btn-primary">
          Place Order
        </button>
      </form>
    </div>
  </div>
</section>

<!-- Include Razorpay Checkout script -->
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>

<script>
  // Function to delete an address
  function deleteAddress(addressId, from) {
    if (confirm('Are you sure you want to delete this address?')) {
      fetch('/deleteAddress', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ addressId: addressId, from: from })
      })
      .then(response => response.json())
      .then(data => {
        if (data.status === "success") {
          if (data.redirectUrl) {
            window.location.href = data.redirectUrl;
          } else {
            location.reload();
          }
        } else {
          Swal.fire("Error", data.message, "error");
        }
      })
      .catch(error => {
        Swal.fire("Error", "Error deleting address", "error");
      });
    }
  }

  // Listen to the form submit event for payment processing
  document.getElementById('checkout-form').addEventListener('submit', async function(e) {
    const paymentMethod = document.querySelector('input[name="paymentMethod"]:checked').value;
    if (paymentMethod === 'Online') {
      e.preventDefault(); // prevent form submission to /placeOrder

      const addressId = document.querySelector('input[name="addressId"]:checked').value;
      
      // Create online order via API
      const orderRes = await fetch('/createOnlineOrder', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ addressId })
      });
      if (!orderRes.ok) {
        const error = await orderRes.json();
        return alert("Error creating order: " + error.message);
      }
      const { orderData } = await orderRes.json();

      // Initialize Razorpay options with redirect false
      var options = {
        "key": "<%= razorpayKey %>",
        "amount": orderData.amount,
        "currency": "INR",
        "name": "Your Store",
        "description": "Order Payment",
        "order_id": orderData.id,
        "handler": async function(response) {
          const verifyRes = await fetch('/onlinePaymentSuccess', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
              razorpay_order_id: response.razorpay_order_id,
              razorpay_payment_id: response.razorpay_payment_id,
              razorpay_signature: response.razorpay_signature,
              addressId: addressId
            })
          });
          const verifyData = await verifyRes.json();
          if (verifyData.success) {
            // Redirect to orderSuccess page instead of order details
            window.location.href = '/orderSuccess';
          } else {
            alert('Payment verification failed: ' + verifyData.error);
          }
        },
        "theme": { "color": "#3399cc" }
      };

      var rzp1 = new Razorpay(options);
      rzp1.open();

    } else {
      // For COD, submit the form normally
      e.target.submit();
    }
  });
</script>

<%- include("../../views/partials/user/footer") %>
