<%- include("../../views/partials/user/header") %>
<style>
.order-timeline {
  max-width: 800px;
  margin: 0 auto;
  padding: 20px;
  background-color: #f8f9fa;
  border-radius: 10px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.timeline-container {
  position: relative;
}

.timeline {
  display: flex;
  justify-content: space-between;
  align-items: center;
  position: relative;
}

.timeline::before {
  content: '';
  position: absolute;
  width: 100%;
  height: 4px;
  background-color: #e0e0e0;
  top: 50%;
  left: 0;
  transform: translateY(-50%);
  z-index: 1;
}

.timeline-item {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 25%;
  position: relative;
  z-index: 2;
}

.timeline-item.active .timeline::before {
  background: linear-gradient(to right, #4CAF50 0%, #4CAF50 100%);
}

.timeline-icon {
  width: 60px;
  height: 60px;
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
  margin-bottom: 10px;
  background-color: #e0e0e0;
  transition: all 0.3s ease;
}

.timeline-item.active .timeline-icon {
  background-color: #4CAF50;
  box-shadow: 0 0 0 10px rgba(76, 175, 80, 0.2);
}

.timeline-icon i {
  font-size: 24px;
}

.timeline-content {
  text-align: center;
}

.timeline-content h5 {
  margin: 0;
  font-weight: bold;
  color: #6c757d;
}

.timeline-item.active .timeline-content h5 {
  color: #4CAF50;
}

.timeline-content p {
  margin: 5px 0 0;
  font-size: 0.8rem;
}

@media (max-width: 768px) {
  .timeline {
    flex-direction: column;
  }
  
  .timeline::before {
    width: 4px;
    height: 100%;
    left: 30px;
    top: 0;
  }
  
  .timeline-item {
    width: 100%;
    flex-direction: row;
    align-items: center;
    margin-bottom: 20px;
  }
  
  .timeline-icon {
    margin-right: 15px;
    margin-bottom: 0;
  }
  
  .timeline-content {
    text-align: left;
  }
}
</style>
<!-- Spacer to create gap between header and contents -->
<div style="height: 100px;"></div>

<div class="container mt-5 mb-5">
  <div class="card">
    <div class="card-header">
      <div class="d-flex justify-content-between align-items-center">
        <h3>Order Details #<%= order._id %></h3>
      </div>
    </div>

    <div class="card-body">
      <!-- Order Status Timeline -->
      <div class="order-timeline mb-4">
        <div class="timeline-container">
          <% 
            // Define normal timeline statuses
            const normalStatuses = ['Pending', 'Shipped', 'Out for Delivery', 'Delivered'];
          %>
          <% if(normalStatuses.includes(order.orderStatus)) { 
               // Determine current status index
               const currentIndex = normalStatuses.indexOf(order.orderStatus);
          %>
            <div class="timeline">
              <% normalStatuses.forEach((status, index) => { %>
                <div class="timeline-item <%= index <= currentIndex ? 'active' : '' %>">
                  <div class="timeline-icon">
                    <% if (status === 'Pending') { %>
                      <i class="fa fa-clock-o"></i>
                    <% } else if (status === 'Shipped') { %>
                      <i class="fa fa-truck"></i>
                    <% } else if (status === 'Out for Delivery') { %>
                      <i class="fa fa-motorcycle"></i>
                    <% } else if (status === 'Delivered') { %>
                      <i class="fa fa-check-circle"></i>
                    <% } %>
                  </div>
                  <div class="timeline-content">
                    <h5><%= status %></h5>
                    <% if (order.statusUpdates && order.statusUpdates[status]) { %>
                      <p class="text-muted">
                        <%= new Date(order.statusUpdates[status]).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' }) %>
                      </p>
                    <% } %>
                  </div>
                </div>
              <% }); %>
            </div>
          <% } else { %>
            <!-- Special cases: only show the special status -->
            <div class="timeline">
              <div class="timeline-item active">
                <div class="timeline-icon">
                  <i class="fa fa-info-circle"></i>
                </div>
                <div class="timeline-content">
                  <h5><%= order.orderStatus %></h5>
                  <% if (order.statusUpdates && order.statusUpdates[order.orderStatus]) { %>
                    <p class="text-muted">
                      <%= new Date(order.statusUpdates[order.orderStatus]).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' }) %>
                    </p>
                  <% } %>
                </div>
              </div>
            </div>
          <% } %>
        </div>
      </div>

      <!-- Order Items -->
      <div class="order-items mb-4">
        <h4>Items</h4>
        <div class="table-responsive">
          <table class="table">
            <thead>
              <tr>
                <th>Product</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody>
              <% order.items.forEach(item => { %>
                <tr>
                  <td>
                    <div class="d-flex align-items-center">
                      <img src="/uploads/product-images/<%= item.productId.productImage[0] %>" 
                           alt="<%= item.productId.productName %>"
                           style="width: 50px; height: 50px; object-fit: cover;">
                      <span class="ms-2"><%= item.productId.productName %></span>
                    </div>
                  </td>
                  <td>₹<%= item.price %></td>
                  <td><%= item.quantity %></td>
                  <td>₹<%= item.price * item.quantity %></td>
                  <td>
                    <div class="order-actions">
                      <% if (order.orderStatus === 'Pending' && (!item.status || item.status === 'Pending')) { %>
                        <button class="btn btn-sm btn-danger"
                                onclick="cancelOrderItem('<%= order._id %>', '<%= item._id %>')">
                          Cancel Item
                        </button>
                      <% } %>
                      <% if (order.orderStatus === 'Delivered' && (!item.status || item.status === 'Pending')) { %>
                        <button class="btn btn-sm btn-warning"
                                onclick="returnOrderItem('<%= order._id %>', '<%= item._id %>')">
                          Return Item
                        </button>
                      <% } %>
                      <% if (order.orderStatus === 'Delivered' && !item.reviewed) { %>
                        <a href="/review?orderId=<%= order._id %>&productId=<%= item.productId._id %>" 
                           class="btn btn-sm btn-primary">
                            Write Review
                        </a>
                      <% } %>
                      <% if (item.status) { %>
                        <span class="badge bg-<%= 
                          item.status === 'Cancelled' ? 'danger' : item.status === 'Return Requested' ? 'warning' : item.status === 'Returned' ? 'info' : 'success' %>">
                          <%= item.status %>
                        </span>
                      <% } %>
                    </div>
                  </td>
                </tr>
              <% }) %>
            </tbody>
          </table>
        </div>
      </div>

      <!-- Order Summary -->
      <div class="row">
        <div class="col-md-6">
          <div class="shipping-address">
            <h4>Shipping Address</h4>
            <p>
              <%= address.name %><br>
              <%= address.addressType %><br>
              <%= address.city %>, <%= address.state %><br>
              PIN: <%= address.pincode %><br>
              Phone: <%= address.phone_no %>
            </p>
          </div>
        </div>
        <div class="col-md-6">
          <div class="order-summary">
            <h4>Payment Summary</h4>
            <table class="table table-borderless">
              <tr>
                <td>Subtotal:</td>
                <td class="text-end">₹<%= order.totalAmount %></td>
              </tr>
              <tr>
                <td>Shipping:</td>
                <td class="text-end">₹<%= order.shippingCost || 0 %></td>
              </tr>
              <tr>
                <td><strong>Total:</strong></td>
                <td class="text-end"><strong>₹<%= order.totalAmount + (order.shippingCost || 0) %></strong></td>
              </tr>
            </table>
          </div>
        </div>
      </div>

    </div>
  </div>
</div>

<!-- Review Modal -->
<div class="modal fade" id="reviewModal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Write a Review</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <form action="/submitReview" method="POST">
        <div class="modal-body">
          <input type="hidden" name="productId" id="reviewProductId">
          <input type="hidden" name="orderId" value="<%= order._id %>">
          
          <div class="mb-3">
            <label>Rating</label>
            <div class="rating">
              <% for(let i=5; i>=1; i--) { %>
                <input type="radio" name="rating" value="<%= i %>" id="star<%= i %>">
                <label for="star<%= i %>">☆</label>
              <% } %>
            </div>
          </div>
          
          <div class="mb-3">
            <label>Review</label>
            <textarea name="review" class="form-control" rows="3" required></textarea>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
          <button type="submit" class="btn btn-primary">Submit Review</button>
        </div>
      </form>
    </div>
  </div>
</div>

<style>
  /* New CSS for order actions */
  .order-actions {
    display: flex;
    flex-wrap: wrap;   /* Allows items to wrap on smaller screens */
    gap: 0.5rem;       /* Adjust the gap between buttons/badges */
    align-items: center;
  }
  
  /* Adjust rating styles if needed */
  .rating {
    display: flex;
    flex-direction: row-reverse;
    justify-content: flex-end;
  }
  .rating input {
    display: none;
  }
  .rating label {
    cursor: pointer;
    font-size: 25px;
    color: #ddd;
    padding: 5px;
  }
  .rating input:checked ~ label,
  .rating label:hover,
  .rating label:hover ~ label {
    color: #ffd700;
  }
</style>

<script>
  function openReviewModal(productId) {
    document.getElementById('reviewProductId').value = productId;
    new bootstrap.Modal(document.getElementById('reviewModal')).show();
  }

  function cancelOrderItem(orderId, itemId) {
    Swal.fire({
      title: 'Are you sure?',
      text: "Cancel only this item? The refund will be credited instantly.",
      icon: 'warning',
      showCancelButton: true,
      confirmButtonText: 'Yes, cancel it!'
    }).then(result => {
      if (result.isConfirmed) {
        fetch('/order/cancelItem', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ orderId, itemId, reason: "Cancelled by user" })
        })
        .then(res => res.json())
        .then(data => {
          if (data.success) {
            Swal.fire({
              icon: 'success',
              title: 'Cancelled',
              text: data.message
            }).then(() => {
              // Force reload to show updated status
              window.location.reload();
            });
          } else {
            Swal.fire({
              icon: 'error',
              title: 'Error',
              text: data.message
            });
          }
        })
        .catch(error => {
          console.error(error);
          Swal.fire('Error', 'Failed to cancel item', 'error');
        });
      }
    });
  }

  function returnOrderItem(orderId, itemId) {
    Swal.fire({
      title: 'Return Item',
      text: 'Please provide a reason for return:',
      input: 'textarea',
      inputAttributes: { required: true },
      showCancelButton: true,
      confirmButtonText: 'Submit'
    }).then(result => {
      if (result.isConfirmed) {
        fetch('/order/returnItem', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ orderId, itemId, reason: result.value })
        })
        .then(res => res.json())
        .then(data => {
          Swal.fire({
            icon: data.success ? 'success' : 'error',
            title: data.success ? 'Success' : 'Error',
            text: data.message
          }).then(() => location.reload());
        })
        .catch(error => {
          console.error(error);
          Swal.fire('Error', 'Failed to process return request', 'error');
        });
      }
    });
  }
</script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<%- include("../../views/partials/user/footer") %>


