<%- include("../../views/partials/user/header") %>

<!-- Cropper.js CSS -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css">

<style>
  /* Container style similar to your OTP container */
  .profile-container {
    margin-top: 150px; /* Extra top spacing to avoid header overlap */
    max-width: 400px;
    padding: 30px;
    background-color: #fff;
    border-radius: 10px;
    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
    margin-left: auto;
    margin-right: auto;
  }

  .profile-heading {
    text-align: center;
    margin-bottom: 30px;
  }

  .form-group {
    width: 100%;
    text-align: center;
    margin-bottom: 15px;
  }

  .btn-primary {
    margin-top: 15px;
    padding: 12px;
    font-size: 16px;
  }

  /* Cropping container */
  .cropper-container {
    width: 100%;
    max-height: 400px;
    margin: 10px 0;
    overflow: hidden;
  }

  #imagePreview {
    max-width: 100%;
    display: none;
  }
</style>

<div class="container profile-container">
  <h3 class="profile-heading">Edit Profile</h3>
  <form id="editProfileForm" method="post" action="/updateProfile" enctype="multipart/form-data">
    <div class="form-group">
      <label for="newImage">Select New Profile Image:</label>
      <input type="file" id="newImage" name="newImage" accept="image/*" class="form-control">
    </div>
    <!-- Cropping Area -->
    <div class="cropper-container">
      <img id="imagePreview" alt="Selected Image">
    </div>
    <!-- Hidden input to hold the cropped image as base64 string -->
    <input type="hidden" id="croppedImage" name="croppedImage">
    <div class="form-group">
      <button type="button" id="cropButton" class="btn btn-primary" style="display: none;">Crop Image</button>
    </div>
    <div class="form-group">
      <button type="submit" class="btn btn-primary">Update Profile</button>
    </div>
  </form>
</div>

<!-- Cropper.js library -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>
<script>
  let cropper;
  const imagePreview = document.getElementById('imagePreview');
  const newImageInput = document.getElementById('newImage');
  const cropButton = document.getElementById('cropButton');

  newImageInput.addEventListener('change', (e) => {
    const files = e.target.files;
    if (files && files.length > 0) {
      const file = files[0];
      const url = URL.createObjectURL(file);
      imagePreview.src = url;
      imagePreview.style.display = 'block';

      if (cropper) {
        cropper.destroy();
      }
      cropper = new Cropper(imagePreview, {
        aspectRatio: 1,
        viewMode: 1,
        minContainerWidth: 300,
        minContainerHeight: 300
      });
      cropButton.style.display = 'block';
    }
  });

  cropButton.addEventListener('click', () => {
    if (cropper) {
      const canvas = cropper.getCroppedCanvas({
        width: 300,
        height: 300
      });
      const base64Image = canvas.toDataURL('image/jpeg', 0.8);
      document.getElementById('croppedImage').value = base64Image;
      imagePreview.src = base64Image;
      cropper.destroy();
      cropButton.style.display = 'none';
    }
  });

  document.getElementById('editProfileForm').addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const croppedImage = document.getElementById('croppedImage').value;
    if (!croppedImage) {
      alert('Please select and crop an image first');
      return;
    }

    try {
      const response = await fetch('/updateProfile', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          croppedImage: croppedImage
        })
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const result = await response.json();
      
      if (result.success) {
        window.location.href = '/userProfile';
      } else {
        alert(result.message || 'Failed to update profile');
      }
    } catch (error) {
      console.error('Error:', error);
      alert('An error occurred while updating the profile');
    }
  });
</script>

<%- include("../../views/partials/user/footer") %>
